# This is a basic workflow to help you get started with Actions

name: manual-deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      deployType:
        description: 'Deploy Type'
        required: true
        default: 'validate' 
        type: choice
        options:
        - validate
        - deploy
      org:
        description: 'Target Org'
        required: true
        default: 'UAT' 
        type: choice
        options:
        - UAT
        - PROD
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '>=14'
          check-latest: true

      # Runs a single command using the runners shell        
      - name: Install CLI
        run: npm install sfdx-cli --global

      # The URL is stored in the Github Secret named AUTH_URL
      # so here we store the URL into a text file
      - name: SETUP PROD (${{ inputs.org }})
        if: inputs.org == 'PROD'
        run: | 
          echo ${{ secrets.AUTH_URL_PROD}} > ./AUTH_URL.txt
          sfdx auth:sfdxurl:store -f ./AUTH_URL.txt -s -a ${{ inputs.org }}
      - name: SETUP UAT (${{ inputs.org }})
        if: inputs.org == 'UAT'
        run: | 
          echo ${{ secrets.AUTH_URL_UAT}} > ./AUTH_URL.txt
          sfdx auth:sfdxurl:store -f ./AUTH_URL.txt -s -a ${{ inputs.org }}
      # running Validate or deploy based on user option (else statement not available)
      - name: Running VALIDATE (${{ inputs.deployType }} == 'validate')
        if: inputs.deployType == 'validate'
        run: 'sfdx force:source:deploy -x ./manifest/package.xml -c -u ${{ inputs.org }} -w 10'

      - name: Running DEPLOY (${{ inputs.deployType }} == 'deploy')
        if: inputs.deployType == 'deploy'
        run: 'sfdx force:source:deploy -x ./manifest/package.xml -u ${{ inputs.org }} -w 10'
        
